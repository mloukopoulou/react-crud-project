{"version":3,"sources":["components/Students.js","components/AddStudent.js","components/EditStudent.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","useStyles","makeStyles","table","minWidth","maxWidth","Students","history","useHistory","useState","students","setStudents","useEffect","getStudents","a","axios","process","result","status","alert","data","deleteStudent","rowData","delete","id","filter","student","style","title","icons","onRowClick","event","push","handleRowClick","localization","pagination","labelDisplayedRows","toolbar","nRowsSelected","header","actions","body","emptyDataSourceMessage","filterRow","filterTooltip","columns","field","hidden","headerStyle","backgroundColor","icon","tooltip","onClick","options","actionsColumnIndex","Button","variant","color","size","startIcon","component","Link","to","theme","root","margin","spacing","width","AddStudent","classes","setStudent","handleInputChange","target","name","value","persist","saveStudent","put","Typography","gutterBottom","className","noValidate","autoComplete","onSubmit","preventDefault","first_name","last_name","TextField","onChange","type","EditStudent","studentId","match","params","getStudent","updateStudent","post","endIcon","link","NavBar","exact","appbar","display","App","Container","AppBar","position","Toolbar","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.debae769.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {forwardRef} from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport MaterialTable from 'material-table';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport {Link, useHistory} from 'react-router-dom';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref}/>),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref}/>),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref}/>),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref}/>),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref}/>),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref}/>),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref}/>),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref}/>),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref}/>),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref}/>),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref}/>),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref}/>),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref}/>),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref}/>),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref}/>)\r\n};\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n        maxWidth: 900\r\n    },\r\n});\r\n\r\nexport default function Students(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [students, setStudents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getStudents();\r\n    }, []);\r\n\r\n    const getStudents = async () => {\r\n        const result = await axios(process.env.REACT_APP_API_URL + '/students');\r\n\r\n        if (result.status !== 200) {\r\n            alert('Πρόβλημα κατά την επικοινωνία με την βάση.');\r\n        }\r\n        setStudents(result.data);\r\n    };\r\n\r\n    const handleRowClick = (event, rowData) => {\r\n        history.push(`/EditStudent/${rowData.id}`);\r\n    };\r\n\r\n    const deleteStudent = async (rowData) => {\r\n        const result = await axios.delete('http://localhost:3001/students/' + rowData.id);\r\n\r\n        if (result.status !== 200) {\r\n            alert('Πρόβλημα κατά την επικοινωνία με την βάση.');\r\n        }\r\n\r\n        setStudents(students.filter(student => student.id !== rowData.id))\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{maxWidth: '100%'}}>\r\n            <MaterialTable\r\n                title=\"Διαχείριση Μαθητών\"\r\n                icons={tableIcons}\r\n                onRowClick={(event, rowData) => handleRowClick(event, rowData)}\r\n                localization={{\r\n                    pagination: {\r\n                        labelDisplayedRows: '{from}-{to} από {count}'\r\n                    },\r\n                    toolbar: {\r\n                        nRowsSelected: '{0} επιλεγμένη(ες) εγγραφή(ες)'\r\n                    },\r\n                    header: {\r\n                        actions: ''\r\n                    },\r\n                    body: {\r\n                        emptyDataSourceMessage: 'Δεν βρέθηκαν εγγραφές',\r\n                        filterRow: {\r\n                            filterTooltip: 'Φίλτρο'\r\n                        }\r\n                    }\r\n                }}\r\n                columns={[\r\n                    {title: 'id', field: 'id', hidden: true,},\r\n                    {\r\n                        title: 'Όνομα', field: 'first_name',\r\n                        headerStyle: {\r\n                            backgroundColor: '#EFEFEF',\r\n                        }\r\n                    },\r\n                    {\r\n                        title: 'Επώνυμο', field: 'last_name',\r\n                        headerStyle: {\r\n                            backgroundColor: '#EFEFEF',\r\n                        }\r\n                    },\r\n\r\n                ]}\r\n                data={students}\r\n                actions={[\r\n                    {\r\n                        icon: () => <DeleteOutline/>,\r\n                        tooltip: 'Διαγραφή Μαθητή',\r\n                        onClick: async (event, rowData) => {\r\n                            await deleteStudent(rowData);\r\n                        },\r\n                    },\r\n                ]}\r\n                options={{\r\n                    actionsColumnIndex: -1\r\n                }}\r\n            />\r\n            <br/>\r\n            <Button variant=\"contained\" color=\"primary\" size=\"medium\" startIcon={<AddBox/>}\r\n                    component={Link} to=\"/AddStudent\">\r\n                Εισαγωγή Νέου Μαθητή\r\n            </Button>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}","import React, {useEffect, useState} from 'react';\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function AddStudent(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [student, setStudent] = useState({});\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        event.persist();\r\n\r\n        setStudent({ ...student, [name]: value })\r\n    };\r\n\r\n    const saveStudent = async (rowData) => {\r\n        const result = await axios.put(process.env.REACT_APP_API_URL + '/students', rowData);\r\n\r\n        if (result.status !== 200) {\r\n            alert('Πρόβλημα κατά την επικοινωνία με την βάση.');\r\n        }\r\n\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!student.first_name || !student.last_name) {\r\n            alert('Πρέπει να συμπληρώσετε όλα τα πεδία της φόρμας');\r\n            return;\r\n        }\r\n        saveStudent(student);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <br></br>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n                Εισαγωγή Νέου Μαθητή\r\n            </Typography>\r\n            <br></br>\r\n            <form className={classes.root} noValidate autoComplete=\"off\"\r\n                onSubmit={handleOnSubmit}>\r\n                <div>\r\n                    <label>Όνομα</label>\r\n                    <TextField id=\"first_name\" name=\"first_name\" variant=\"outlined\" onChange={handleInputChange}/>\r\n                </div>\r\n                <div>\r\n                    <label>Επίθετο</label>\r\n                    <TextField id=\"last_name\" name=\"last_name\" variant=\"outlined\" onChange={handleInputChange}/>\r\n                </div>\r\n                   <Button variant=\"outlined\" color=\"primary\" type=\"submit\">Εισαγωγή</Button>\r\n            </form>\r\n        </>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {makeStyles} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport Typography from \"@material-ui/core/Typography/Typography\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function EditStudent(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    let studentId = props.match.params.studentId;\r\n\r\n    const [student, setStudent] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getStudent = async () => {\r\n            const result = await axios(process.env.REACT_APP_API_URL + '/students/' + studentId)\r\n\r\n            if (result.status !== 200) {\r\n                alert('Πρόβλημα κατά την επικοινωνία με την βάση.');\r\n            }\r\n            setStudent(result.data);\r\n        };\r\n\r\n        getStudent();\r\n    }, [studentId]);\r\n\r\n    const handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        event.persist();\r\n\r\n        setStudent({ ...student, [name]: value })\r\n    };\r\n\r\n    const updateStudent = async (rowData) => {\r\n        const result = await axios.post(process.env.REACT_APP_API_URL + '/students/' + studentId, rowData);\r\n\r\n        if (result.status !== 200) {\r\n            alert('Πρόβλημα κατά την επικοινωνία με την βάση.');\r\n        }\r\n\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const handleOnSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!student.first_name || !student.last_name) {\r\n            alert('Πρέπει να συμπληρώσετε όλα τα πεδία της φόρμας');\r\n            return;\r\n        }\r\n        updateStudent(student);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <br></br>\r\n            <Typography variant=\"subtitle2\" gutterBottom>\r\n                Επεξεργασία μαθητή με κωδικό {studentId}\r\n            </Typography>\r\n            <br></br>\r\n            <form className={classes.root} noValidate autoComplete=\"off\"\r\n                  onSubmit={handleOnSubmit}>\r\n                <div>\r\n                    <label>Όνομα</label>\r\n                    <TextField id=\"first_name\" name=\"first_name\" variant=\"outlined\" value={student.first_name} onChange={handleInputChange}/>\r\n                </div>\r\n                <div>\r\n                    <label>Επίθετο</label>\r\n                    <TextField id=\"last_name\" name=\"last_name\" variant=\"outlined\" value={student.last_name} onChange={handleInputChange}/>\r\n                </div>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" endIcon={<SaveIcon />}>Αποθήκευση</Button>\r\n            </form>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport {Link, Route, Switch, NavLink} from 'react-router-dom';\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n    link: {\r\n        color:'#FFFFFF'\r\n    },\r\n\r\n});\r\n\r\nexport default function NavBar(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <nav className=\"navBar\">\r\n            <ul>\r\n                <li><NavLink exact to=\"/\">Αρχική</NavLink></li>\r\n                <li><NavLink to=\"/AddStudent\">Εισαγωγή Μαθητή</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Students from \"./components/Students\";\nimport AddStudent from \"./components/AddStudent\";\nimport EditStudent from \"./components/EditStudent\";\nimport Container from \"@material-ui/core/Container\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport NavBar from './components/NavBar';\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n    appbar: {\n        backgroundColor:'#007ED8'\n    },\n    root: {\n        display: 'flex',\n    },\n});\n\nfunction App() {\n    const classes = useStyles();\n      return (\n          <div className={classes.root}>\n              <Container maxWidth=\"xl\">\n\n                  <Router>\n\n                      <AppBar position=\"static\" className={classes.appbar}>\n                          <Toolbar>\n                              <Typography variant=\"h6\">\n\n                                  <NavBar />\n                              </Typography>\n                          </Toolbar>\n                      </AppBar>\n                      <Switch>\n                          <Route exact path=\"/\" component={Students} />\n                          <Route path=\"/AddStudent\" component={AddStudent}/>\n                          <Route path=\"/EditStudent/:studentId\" component={EditStudent}/>\n                      </Switch>\n                  </Router>\n\n\n              </Container>\n          </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}